name: Build and Test .NET

on:
  workflow_call:
    inputs:
      coverage_meta:
        required: true
        type: string

jobs:
  build:
    name: Build, Test .NET and Report Coverage
    runs-on: ubuntu-latest
    env:
      COVERAGE_META: ${{ inputs.coverage_meta }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --collect:"XPlat Code Coverage"
        working-directory: SimuladorAppTests

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate HTML report
        run: |
          reportgenerator -reports:**/TestResults/*/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:Html

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageReport
          path: coveragereport

      - name: Coverage and publish on summary
        run: |
          COVERAGE_FILE=$(find SimuladorAppTests/TestResults -name "coverage.cobertura.xml" | head -n 1)
          if [[ -z "$COVERAGE_FILE" ]]; then
            echo "Arquivo de cobertura nÃ£o encontrado!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          TOTAL_COVERAGE=$(grep -oP '(?<=line-rate=")[0-9.]+' "$COVERAGE_FILE" | head -n 1)
          TOTAL_COVERAGE_PERCENT=$(echo "$TOTAL_COVERAGE * 100" | bc)

          echo '### ðŸ“Š RelatÃ³rio de Cobertura de CÃ³digo' >> $GITHUB_STEP_SUMMARY
          echo "**Cobertura Total:** $TOTAL_COVERAGE_PERCENT% - Meta: ${{ vars.COVERAGE_META }}%" >> $GITHUB_STEP_SUMMARY

          if (( $(echo "$TOTAL_COVERAGE_PERCENT < ${{ vars.COVERAGE_META }}" | bc -l) )); then
            echo "A cobertura estÃ¡ abaixo da meta! Para mais informaÃ§Ãµes, baixe o report." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
